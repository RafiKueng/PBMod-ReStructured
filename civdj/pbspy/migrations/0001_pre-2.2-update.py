# Generated by Django 2.2.9 on 2020-01-26 09:58

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import re


class Migration(migrations.Migration):

    replaces = [('pbspy', '0001_initial'), ('pbspy', '0002_gamelogcurrenttimerchanged'), ('pbspy', '0003_auto_20160416_2247'), ('pbspy', '0004_auto_20160417_1743'), ('pbspy', '0005_auto_20160501_1728'), ('pbspy', '0006_auto_20160501_1728'), ('pbspy', '0007_auto_20171121_0922'), ('pbspy', '0008_auto_20171121_2209'), ('pbspy', '0009_auto_20171122_0056'), ('pbspy', '0010_auto_20181012_1822'), ('pbspy', '0011_auto_20190105_0859'), ('pbspy', '0012_auto_20190108_0122'), ('pbspy', '0013_auto_20190402_1717'), ('pbspy', '0014_auto_20190402_1719')]

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pb_remote_password', models.CharField(max_length=200)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('hostname', models.CharField(max_length=200)),
                ('port', models.PositiveIntegerField(default=2056, validators=[django.core.validators.MaxValueValidator(65535), django.core.validators.MinValueValidator(1)])),
                ('manage_port', models.PositiveIntegerField(default=13373, validators=[django.core.validators.MaxValueValidator(65535), django.core.validators.MinValueValidator(1)])),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.URLValidator()])),
                ('last_update_successful', models.DateTimeField(null=True)),
                ('last_update_attempt', models.DateTimeField(default=datetime.datetime.now)),
                ('is_paused', models.BooleanField(default=False)),
                ('is_headless', models.BooleanField(default=False)),
                ('is_autostart', models.BooleanField(default=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('pb_name', models.CharField(blank=True, max_length=200, null=True)),
                ('mod_name', models.CharField(blank=True, max_length=50, null=True)),
                ('turn', models.PositiveSmallIntegerField(default=0)),
                ('timer_max_h', models.PositiveIntegerField(blank=True, null=True)),
                ('timer_remaining_4s', models.PositiveIntegerField(blank=True, null=True)),
                ('is_private', models.BooleanField(default=False)),
                ('is_online', models.BooleanField(default=True)),
                ('victory_type', models.SmallIntegerField(default=-1)),
                ('is_dynamic_ip', models.BooleanField(default=False)),
                ('admins', models.ManyToManyField(related_name='admin_games', to=settings.AUTH_USER_MODEL)),
                ('subscribed_users', models.ManyToManyField(blank=True, related_name='subscribed_games', to=settings.AUTH_USER_MODEL)),
                ('victory_image', models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.URLValidator(regex='^.*[.](png|jpg|jpeg|git)$')])),
                ('victory_message', models.CharField(blank=True, max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GameLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(db_index=True)),
                ('year', models.IntegerField()),
                ('turn', models.PositiveSmallIntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pbspy.Game')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_pbspy.gamelog_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GameLogAdminAction',
            fields=[
                ('gamelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLog')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelog',),
        ),
        migrations.CreateModel(
            name='GameLogForceDisconnect',
            fields=[
                ('gamelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLog')),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelog',),
        ),
        migrations.CreateModel(
            name='GameLogMetaChange',
            fields=[
                ('gamelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLog')),
                ('pb_name_old', models.CharField(max_length=200, null=True)),
                ('pb_name', models.CharField(max_length=200)),
                ('player_count_old', models.SmallIntegerField()),
                ('player_count', models.SmallIntegerField()),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelog',),
        ),
        migrations.CreateModel(
            name='GameLogPause',
            fields=[
                ('gamelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLog')),
                ('paused', models.BooleanField(default=None)),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelog',),
        ),
        migrations.CreateModel(
            name='GameLogPlayer',
            fields=[
                ('gamelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLog')),
                ('player_name', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelog',),
        ),
        migrations.CreateModel(
            name='GameLogReload',
            fields=[
                ('gamelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLog')),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelog',),
        ),
        migrations.CreateModel(
            name='GameLogServerTimeout',
            fields=[
                ('gamelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLog')),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelog',),
        ),
        migrations.CreateModel(
            name='GameLogTurn',
            fields=[
                ('gamelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLog')),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelog',),
        ),
        migrations.CreateModel(
            name='GameLogAdminEndTurn',
            fields=[
                ('gamelogadminaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLogAdminAction')),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelogadminaction',),
        ),
        migrations.CreateModel(
            name='GameLogAdminPause',
            fields=[
                ('gamelogadminaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLogAdminAction')),
                ('paused', models.BooleanField(default=None)),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelogadminaction',),
        ),
        migrations.CreateModel(
            name='GameLogAdminSave',
            fields=[
                ('gamelogadminaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLogAdminAction')),
                ('filename', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelogadminaction',),
        ),
        migrations.CreateModel(
            name='GameLogAI',
            fields=[
                ('gamelogplayer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLogPlayer')),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelogplayer',),
        ),
        migrations.CreateModel(
            name='GameLogClaimed',
            fields=[
                ('gamelogplayer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLogPlayer')),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelogplayer',),
        ),
        migrations.CreateModel(
            name='GameLogEliminated',
            fields=[
                ('gamelogplayer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLogPlayer')),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelogplayer',),
        ),
        migrations.CreateModel(
            name='GameLogFinish',
            fields=[
                ('gamelogplayer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLogPlayer')),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelogplayer',),
        ),
        migrations.CreateModel(
            name='GameLogLogin',
            fields=[
                ('gamelogplayer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLogPlayer')),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelogplayer',),
        ),
        migrations.CreateModel(
            name='GameLogLogout',
            fields=[
                ('gamelogplayer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLogPlayer')),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelogplayer',),
        ),
        migrations.CreateModel(
            name='GameLogNameChange',
            fields=[
                ('gamelogplayer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLogPlayer')),
                ('player_name_new', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelogplayer',),
        ),
        migrations.CreateModel(
            name='GameLogScore',
            fields=[
                ('gamelogplayer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLogPlayer')),
                ('score', models.PositiveIntegerField()),
                ('delta', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelogplayer',),
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingame_id', models.PositiveSmallIntegerField()),
                ('name', models.TextField(max_length=200)),
                ('score', models.PositiveIntegerField()),
                ('finished_turn', models.BooleanField(default=False)),
                ('ping', models.TextField(max_length=200, verbose_name='connection status')),
                ('is_human', models.BooleanField(default=False)),
                ('is_claimed', models.BooleanField(default=False)),
                ('is_online', models.BooleanField(default=False)),
                ('civilization', models.TextField(max_length=200)),
                ('leader', models.TextField(max_length=200)),
                ('color_rgb', models.TextField(max_length=11)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pbspy.Game')),
                ('ingame_stack', models.SmallIntegerField(default=0)),
            ],
            options={
                'unique_together': {('ingame_id', 'game', 'ingame_stack')},
                'index_together': {('ingame_id', 'game')},
            },
        ),
        migrations.AddField(
            model_name='gamelogplayer',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pbspy.Player'),
        ),
        migrations.AddField(
            model_name='game',
            name='victory_player_id',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pbspy.Player'),
        ),
        migrations.AlterField(
            model_name='game',
            name='victory_image',
            field=models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.URLValidator(regex='^.*[.](png|jpg|jpeg|git|php[?].*)$')]),
        ),
        migrations.AlterField(
            model_name='game',
            name='victory_image',
            field=models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.URLValidator(regex='^.*[.](png|jpg|jpeg|gif|php[?].*)$')]),
        ),
        migrations.AlterField(
            model_name='game',
            name='last_update_attempt',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.CreateModel(
            name='GameLogMissedTurn',
            fields=[
                ('gamelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLog')),
                ('missed_turn_names', models.CharField(max_length=2000)),
                ('missed_turn_ids', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelog',),
        ),
        migrations.CreateModel(
            name='GameLogCurrentTimerChanged',
            fields=[
                ('gamelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLog')),
                ('from_4s', models.PositiveIntegerField(blank=True, null=True)),
                ('to_4s', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelog',),
        ),
        migrations.CreateModel(
            name='GameLogTimerChanged',
            fields=[
                ('gamelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pbspy.GameLog')),
                ('timer_max_h', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('pbspy.gamelog',),
        ),
    ]
